Working notes / commands:

from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies

Adapter Clipping of Raw Reads

# Did not do quality trimming. Using SPAdes read error correction
# Adapter Clipping/light trimming only

bash 00_PBS/00a_Launch_Trimmomatic_Array.sh 00_DataC *fastq 00_DataTrimmed

########################################################
########################################################

SPAdes Assembly

# SPAdes NoTrim: 01b_Assemble_SPAdes.pbs

bash 00_PBS/01a_Launch_Assemble_SPAdes.sh 01_Sample_List.txt 00_DataC 01_SPAdes_Assemblies_NoTrim 0

########################################################

# Not using unpaired reads for now. Put them in their own directory
mkdir 00_DataTrimmed/UnPaired
mv 00_DataTrimmed/*U.fastq 00_DataTrimmed/UnPaired/

# Test Trim Paired Only : 01c_Assemble_SPAdes.pbs
bash 00_PBS/01a_Launch_Assemble_SPAdes.sh 01_Sample_List.txt 00_DataTrimmed 01_SPAdes_Assemblies_AdaptorTrimmed 1
# After array jobs finish, check log files ( grep Error *out* )
# Sometimes an assembly or two will fail abnormally and usually is fine when rerun.
# In this instance, jobs in array positions 23, 25, and 102 failed and need to be rerun.
# remove failed assembly folders
cd 01_SPAdes_Assemblies_AdaptorTrimmed/
rm UW03* CZ30* CZ32*
# Rerun failed assemblies.
qsub -t 23,25,102 -v sample_list=01_Sample_List.txt,data_dir=00_DataTrimmed,out_dir=01_SPAdes_Assemblies_AdaptorTrimmed 00_PBS/01c_Assemble_SPAdes.pbs

########################################################

# I decided to test using the unpaired data. You can pass these to spades separately for each paired end set.
# Concatenate each unpaired set into single file and move unpaired data back with the paired data.

from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/00_DataTrimmed/UnPaired

for f in *fastq; do n=`basename $f | cut -d_ -f1-2`; echo $f; cat $f >> ../${n}_U.fastq; done

# Test Trim Paired + Unpaired: 01d_Assemble_SPAdes.pbs

bash 00_PBS/01a_Launch_Assemble_SPAdes.sh 01_Sample_List.txt 00_DataTrimmed 01_SPAdes_Assemblies_Trim 2

# Rerun fails

qsub -t 49 -v sample_list=01_Sample_List.txt,data_dir=00_DataTrimmed,out_dir=01_SPAdes_Assemblies_Trim 00_PBS/01d_Assemble_SPAdes.pbs

########################################################

# Filter and rename assemblies

for f in */contigs.fasta; do n=`echo $f | cut -d_ -f1`; python ../00_Scripts/01_SPAdes_Assembly_Filter_Rename_Stats.py -i $f -o ${n}_Draft_Genome.fna -g $n -l 1000 -c 2; done >> ../01_Sruber_SPAdes_Assembly_Stats.txt


########################################################
########################################################
########################################################

Mash Distance: 01_Sruber_Selected_Genomes

# Compute all vs all Mash Distance Matrix
bash 00_PBS/02a_Launch_Mash_sketch.sh 01_Sruber_Selected_Genomes fna 02_Mash_Analysis_Selected_31k 31 1000000
qsub -v outDir=02_Mash_Analysis_Selected_31k 00_PBS/02c_Mash_paste.pbs
qsub -v outDir=02_Mash_Analysis_Selected_31k,f=Pasted_Sketches.msh 00_PBS/02d_Mash_dist.pbs
rm python 02_02_Mash_Analysis_Selected_31k_query_array.txt

cd 02_Mash_Analysis_Trim

# Rename col and row names of mash distance matrix
python ../00_Scripts/02a_Mash_Rename_Dist_Matrix.py -i Mash_Distance_Matrix.dst -o Mash_Distance_Matrix_Renamed.dst

# NMDS plot of all vs all Mash Distance Matrix
python ../00_Scripts/02b_Mash_Plot_Dist_Matrix_NMDS.py -i Mash_Distance_Matrix_Renamed.dst -o Sruber_Draft_Genomes_Mash_NMDS.png

Mash Distance for all genomes:

# Compute all vs all Mash Distance Matrix
bash 00_PBS/02a_Launch_Mash_sketch.sh 01_Sruber_All_Genomes fna 02_Mash_Analysis_All_31k 31 1000000
bash 00_PBS/02a_Launch_Mash_sketch.sh 01_Sruber_All_Genomes fna 02_Mash_Analysis_All_21k 21 1000000
qsub -v outDir=02_Mash_Analysis_All_31k 00_PBS/02c_Mash_paste.pbs
qsub -v outDir=02_Mash_Analysis_All_21k 00_PBS/02c_Mash_paste.pbs
qsub -v outDir=02_Mash_Analysis_All_31k,f=Pasted_Sketches.msh 00_PBS/02d_Mash_dist.pbs
qsub -v outDir=02_Mash_Analysis_All_21k,f=Pasted_Sketches.msh 00_PBS/02d_Mash_dist.pbs

rm 02_Mash_query_array.txt

cd 02_Mash_Analysis_All

# Rename col and row names of mash distance matrix
python ../00_Scripts/02a_Mash_Rename_Dist_Matrix.py -i Mash_Distance_Matrix.dst -o Mash_Distance_Matrix_Renamed.dst

# NMDS plot of all vs all Mash Distance Matrix
python ../00_Scripts/02b_Mash_Plot_Dist_Matrix_NMDS.py -i Mash_Distance_Matrix_Renamed.dst -o Sruber_Draft_Genomes_Mash_NMDS.png# Compute all vs all Mash Distance Matrix


########################################################
########################################################
########################################################

MiGA Clade of our Draft Genomes:

qsub -v 00_PBS/03_MiGA_Clade.pbs


MiGA Clade including our MAGs from Control ponds E1_M13 E1_M15 and E1_M16 and 16 NCBI Salinibacter genus genomes

Upload and rename NCBI genomes manually.

Copy and rename our Draft Genomes:
for f in 01_Sruber_Draft_Genomes_Trim/*fna; do n=`basename $f | cut -d_ -f1`; cp $f 01_Sruber_All_Genomes/Sruber_${n}_Draft.fna; done

All vs All MiGA ANI vs Shared Fragment Ratio Correlation Plot
uses the file: 03_MiGA_Clades_Selected/data/09.distances/03.ani/miga-project.txt.gz
cd 03_MiGA_Clades_Selected/
cp data/09.distances/03.ani/miga-project.txt.gz AllvsAll_ANI.tsv.gz
gunzip AllvsAll_ANI.tsv.gz
# remove outliers Ssp_10B_NCBI and Saltip
grep -v Ssp_10B_NCBI AllvsAll_ANI.tsv | grep -v Saltip > AllvsAll_ANI_rmOutliers.tsv
rm AllvsAll_ANI.tsv
python ../00_Scripts/03b_AllvAll_ANIvFragments_Correlation.py -ani AllvsAll_ANI_rmOutliers.tsv -org Salinibacter_ruber -op AllvsAll_ANI


########################################################
########################################################
########################################################

Check Assemblies for Halorubrum

bash 00_PBS/05a_Launch_Blast_Check.sh 01_Sruber_Selected_Genomes *fna 05_Blast_Check_Blasts 01_Halorubrum_NCBI_Genomes/00_Halorubrum_DB.fna

- Filter for Length
for f in *blast; do echo $f; python ../00_Scripts/05c_Blast_Check_Filter.py -b $f -a 700 -p 90.0; printf '\n##################################\n##################################\n\n'; done | tee 00_Blast_Check_Filter.log

- Combine matches into single tsv file to view in Excel
cat *blst >> 00_Filtered_Blast_Matches.tsv
- Remove individual *filtered.blst file
rm *blst


########################################################
########################################################
########################################################

16S Tree

from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/04_Alignments_Trees

- Concatenate 16S sequences
cat 00_SSU_Genes/* >> 01_SSU_Alignments/Cocnatenated_16S.fna

- Align 16S sequences
qsub -v input=01_SSU_Alignments,output=01_SSU_Alignments ../00_PBS/04b_Align_Sequence_Clustal_Omega.pbs 

- Build Tree with RAxML
qsub -v input=01_SSU_Alignments/Cocnatenated_16S.fna.clustalo.aln,output=02_SSU_Tree ../00_PBS/04d_RAxML_Single_Nucleotide_Gene_Tree.pbs


########################################################
########################################################
########################################################

Concatenate Gene Tree

from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/04_Alignments_Trees

- Collect essential genes from MiGA.
mkdir 00_EssentialGenes_byGenome
cp ../03_MiGA_Clades_Selected/data/07.annotation/01.function/01.essential/*.ess.faa 00_EssentialGenes_byGenome/

- Transpose files from Genome.faa to Genes.faa
python ../00_Scripts/04a_Collect_MiGA_Ess_for_alignment.py -ess 00_EssentialGenes_byGenome -opd 01_EssentialGenes_byGene
mv Collect_MiGA_Ess_Summary.tsv 01_Collect_MiGA_Ess_Summary.tsv 

- Align each gene set with Clustal Omega
qsub -v input=01_EssentialGenes_byGene,output=02_EssentialGenes_Alignments ../00_PBS/04b_Align_Sequence_Clustal_Omega.pbs 

- Concatenate alignments
mkdir 03_Concatenated_Tree
Aln.cat.rb -I -m AUTO -c 03_Concatenated_Tree/Srube_All_Ess_Aln.cat.fa.raxml.coords 02_EssentialGenes_Alignments/*aln > 03_Concatenated_Tree/Srube_All_Ess_Aln.cat.fa
Reading.
Removing invariable sites.
  Removed 40491 sites.
Concatenating.
  5500 columns.
Generating coordinates.
Done.

- Build Tree with RAxML - Running for 147 hours - Did it ever finish?
## qsub -v input=Srube_All_Ess_Aln.cat.fa,output=03_Concatenated_Tree ../00_PBS/04c_RAxML_Compute_Concatenated_AA_Tree.pbs

- Build Tree with FastTree
qsub -v input=03_Concatenated_Tree/Srube_All_Ess_Aln.cat.fa,output=03_Concatenated_Tree/Srube_All_Ess_Aln.cat.fa.FastTree.nwk ../00_PBS/04e_FastTree.pbs

########################################################
########################################################
########################################################

PGE: Pangenome Analysis (Pangenome Experiment - PGE) :: Sruber / Ecoli / Others

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 1 100 01_Sruber_Group1_Genomes/ Salinibacter_ruber S_ruber 97.5 100 300


## Ecoli and others. Downloaded from NCBI Assembly database Oct 28 2019
## Located in directory: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes
## All draft genomes to match our Sruber draft genomes plus closed Ecoli genomes into addition to Ecoli draft to assess difference between closed and draft.

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 100 100 GENOMES/Escherichia_coli_Complete/ Escherichia_coli E_coli 97.5 100 300

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 100 100 GENOMES/Salmonella_enterica_Scaffold/ Salmonella_enterica S_enterica 97.5 100 300

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 100 100 GENOMES/Mycobacterium_tuberculosis_Contigs/ Mycobacterium_tuberculosis M_tuber 97.5 100 300

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 100 100 GENOMES/Pseudomonas_aeruginosa_Contig/ Pseudomonas_aeruginosa P_aerug 97.5 100 300

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 100 100 GENOMES/Bacillus_thuringiensis_Both/ Bacillus_thuringiensis B_thur 97.5 100 300

bash 00_Run_Pangenome_Experiment/00_Run_Pangenome_Experiment.sh 100 100 GENOMES/Escherichia_coli_Contig/ Escherichia_coli E_coli 97.5 100 300



########################################################
########################################################
########################################################

06x: Gene Annotation - did the same for Ecoli: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes/01b-FILTERED-97.5/00_Ecoli_Annotation_Notes.txt

Step 1: Collect Representative Amino Acid Sequence from CD-Hit clustered nucleotide sequence representatives
	from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies
	mkdir 06_Annotations

	1a: Concatenate all proteins into single file
		cat PGE_0001_S_ruber/03_FAA/* >> 06_Annotations00_/Sruber_Combined_Proteins.faa

	1b: Get CD-HIT Cluster representatives (nucleotide - because we clustered the nucleotide sequence)
		cp PGE_0000_Summary/D_S_ruber_Dereplicated_Genes/02_0001_S_ruber_Clustered_Genes.fnn 06_Annotations/00_Sruber_ClstrRepSeq_Genes.fnn

	1c: Use python script to get the amino acid sequence matching the nucleotide sequence
		cd 06_Annotations/
		python ../00_Scripts/06a_Get_AA_Sequence_frm_Clstrd_Genes.py -f1 00_Sruber_ClstrRepSeq_Genes.fnn -f2 00_Sruber_Combined_Proteins.faa -o 01_Sruber_ClstrRepSeq_Proteins.faa
		### Check for equal number of genes ###
		grep -c '>' 00_Sruber_Clustered_Representative_Genes.fnn :: 12666
		grep -c '>' 01_Sruber_Clustered_Representative_Proteins.faa :: 12666

Step 2: Prepare for blastp annotation
	2a: Splitting .faa file into 22 proteins per file
		# My fasta files are formatted so each sequence is on 1 line only
		mkdir 01_SPLIT_GENES 01_SPLIT_BLASTS 01_SPLIT_QUERY_LIST
	2b: Setup to use GNU parallel 10 split faa files per job submission
		for f in 01_SPLIT_GENES/*; do n=`echo $f | cut -d. -f3`; echo ${f},01_SPLIT_BLASTS/SwissProt_${n}.blst,01_SPLIT_BLASTS/TrEMBL_${n}.blst >> temp_split_gene_list.txt ; done
		split -d -a 5 -l 10 temp_split_gene_list.txt 01_SPLIT_QUERY_LIST/temp_split_gene_list.txt.
		rm temp_split_gene_list.txt

Step 3: Run SwissProt and TrEMBL Annotations with Blastp
	3a: Split files Qsub Array with GNU parallel 
		bash ../00_PBS/06b_Launch_SwissProt_TrEMBL_Annotation_Blastp.pbs 01_SPLIT_QUERY_LIST 01_SPLIT_BLASTS
	3b: Check for completion. Rurun if needed
		echo 01_SPLIT_BLASTS/SwissProt_00*completed | wc -w
		echo 01_SPLIT_BLASTS/TrEMBL_00*completed | wc -w
		## Should equal: echo 01_SPLIT_QUERY_LIST/temp_split_gene_list.txt.000* | wc -w
	3c: Concatenate Split files
		cat 01_SPLIT_BLASTS/SwissProt_00*blst >> 02_ClstrRepSeq_SwissProt.blst
		cat 01_SPLIT_BLASTS/TrEMBL_00*blst >> 02_ClstrRepSeq_TrEMBL.blst
	3d: Filter blast results for best hit
		python ../00_Scripts/06e_BlastTab_BestHit_Filter.py -i 02_ClstrRepSeq_SwissProt.blst -pml 50 -pid 40
			Running Script...
			Total number of entries in blast file: 61761
			Number of reads failing the filters: 52636
			Number of reads passing the filters: 9125
			Number of duplicate blast matches passing filter: 7438
			Number of best hit entries written to new file: 1687

		python ../00_Scripts/06e_BlastTab_BestHit_Filter.py -i 02_ClstrRepSeq_TrEMBL.blst -pml 50 -pid 40
			Running Script...
			Total number of entries in blast file: 119032
			Number of reads failing the filters: 46020
			Number of reads passing the filters: 73012
			Number of duplicate blast matches passing filter: 63484
			Number of best hit entries written to new file: 9528
	3e: Clean up / remove 01_SPLIT Files/folders
		rm -r 01_SPLIT_*
	3f: Retrieve gene annotation information from UniProt DBs
		python ../00_Scripts/06f_BlastTab_UniProtID_to_Gene_Annotation.py -p /gpfs/pace2/project/bio-konstantinidis/rconrad6/dbases/uniprot_sprot.PARSED.dat.tsv -b 02_ClstrRepSeq_SwissProt.filtered_best_hits.blst -o 03_ClstrRepSeq_SwissProt_Annotated.tsv
			Wrote  1687 gene annotations of  1687  blast entries from  1116  UniProt IDs
		python ../00_Scripts/06f_BlastTab_UniProtID_to_Gene_Annotation.py -p /gpfs/pace2/project/bio-konstantinidis/rconrad6/dbases/uniprot_trembl.PARSED.dat.tsv -b 02_ClstrRepSeq_TrEMBL.filtered_best_hits.blst -o 03_ClstrRepSeq_TrEMBL_Annotated.tsv
			Wrote  9528 gene annotations of  9528  blast entries from  6064  UniProt IDs

Step 4: Run KEGG Annotations with KofamScan
	4a: KofamScan
		qsub -v q=01_Sruber_ClstrRepSeq_Proteins.faa,o=02_ClstrRepSeq_KEGG.tsv ../00_PBS/06d_KofamScan_KEGG_Annotations.pbs
		rm -r tmp
	4b: Filter for best hits and Convert KofamScan Output to match UniProt DB output
		python ../00_Scripts/06g_KofamScan_Filter_Convert.py -i 02_ClstrRepSeq_KEGG.tsv -o 03_ClstrRepSeq_KEGG_Annotated.tsv

Step 5: Combine Annotation Results
	python ../00_Scripts/06h_Combine_Annotations.py -trb 03_ClstrRepSeq_TrEMBL_Annotated.tsv -spb 03_ClstrRepSeq_SwissProt_Annotated.tsv -kfs 03_ClstrRepSeq_KEGG_Annotated.tsv -o 04_ClstrRepSeq_Annotations.tsv

		Total TrEMBL_KofamScan Double Annotation: 1918
		Total TrEMBL Single Annotation: 5930
		Total Triple Annotation: 1314
		Total TrEMBL_SwissProt Double Annotation: 366
		Total SwissProt Single Annotation: 6
		Total SwissProt_KofamScan Double Annotation: 1
		Total KofamScan Single Annotation: 164

Step 6: Add Un-annotated genes as NoMatch Hypotheticals
	python ../00_Scripts/06i_Add_Unannotated_Genes.py -a 04_ClstrRepSeq_Annotations.tsv -q 01_Sruber_ClstrRepSeq_Proteins.faa -o 04_ClstrRepSeq_Annotations_NoMatch.tsv


########################################################
########################################################
########################################################

07x: Gene, Contig, Genome  Coverage/Abundance Analysis

from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies

Step 1: Get trimmed metagenome reads and rename them:
		################################################################################################################
			Magic Blast cuts the query name at the first space character and reports this as the query ID.
				Fastq files can be named as:
				@D00468:261:HYTMHBCX2:1:1101:9119:31637 1:N:0:CAGAGAGG+ACTGCATA
				@D00468:261:HYTMHBCX2:1:1101:9119:31637 2:N:0:CAGAGAGG+ACTGCATA
			where the unique identifier can come after the space chacter.
			Filtering for best hit and retrieving the fasta sequence becomes impossible once the unique identifier is lost.
			Rename fastq files before running Magic Blast with fastq files.
		################################################################################################################
	## I have these already in Salinibacter_New_Metagenome directory.
	## I used trimmomatic for adapter clipping and combined all reads 1P, 2P, 1U, and 2U
	mkdir 00_Metagenome_ReadsTrimmed
	cp /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_New_Metagenomes/00_ReadsTrimmed/E*combined.fastq 00_Metagenome_ReadsTrimmed/
	cd 00_Metagenome_ReadsTrimmed/
	for f in *.fastq; do id=`basename $f | cut -d. -f1`; qsub -v id=$id,input=$f ../00_PBS/07b_Rename_Fastq_Sequences.pbs; done


Step 2: Build Magic Blast Databases for the 100 randomly selected Group 1 Genomes
	## These genomes were selected as part of the pangenome analysi pipeline
	## They are located in the folder: PGE_0001_S_ruber/03_FNA/

	2a: Confirm the use of MagicBlast makeblastdb over Blast+ makeblastdb
		which makeblastdb

	2b: For loop # remember -parse_seqids flag or the contig names will be lost. We need them get gene coverages.

		## For All Group1 genomes
		for f in 01_Sruber_Group1_Genomes/*.fna; do makeblastdb -dbtype nucl -in $f -out $f -parse_seqids; done

		## For Random Group1 Genomes from the Pangenome Clustering Experiment
		for f in PGE_0001_S_ruber/03_FNA/*.fna; do makeblastdb -dbtype nucl -in $f -out $f -parse_seqids; done


Step 3: Launch Magic Blast Array - includes Magic Blast Short Read Filter for results
	
	## For All Group1 genomes
	bash 00_PBS/07a_Launch_MagicBlast.sh 00_Metagenome_ReadsTrimmed 01_Sruber_Group1_Genomes 07a_MagicBlast_Metagenomes_to_Group1

	## For Random Group1 Genomes from the Pangenome Clustering Experiment

	# Control
	bash 00_PBS/07a_Launch_MagicBlast.sh 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07a_MagicBlast_Control E1

	# UnShaded
	bash 00_PBS/07a_Launch_MagicBlast.sh 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07b_MagicBlast_UnShaded E4
	
	# Dilution
	bash 00_PBS/07a_Launch_MagicBlast.sh 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution E6


Step 4: Build RecPlots for visual inspection
	## RecPlot version 4 from: https://github.com/KGerhardt/Recplot_4
	## cd /gpfs/pace2/project/bio-konstantinidis/rconrad6/apps
	## module load git
	## git clone https://github.com/KGerhardt/Recplot_4.git
	##
	## Update Recplot_4
	## cd /gpfs/pace2/project/bio-konstantinidis/rconrad6/apps/Recplot_4
	## module load git
	## git pull origin master

	qsub -v magicblasts=07a_MagicBlast_Control,genomes=PGE_0001_S_ruber/03_FNA,outdir=07a_RecPlot_Control 00_PBS/07d_RecPlot.pbs
	qsub -v magicblasts=07b_MagicBlast_UnShaded,genomes=PGE_0001_S_ruber/03_FNA,outdir=07b_RecPlot_UnShaded 00_PBS/07d_RecPlot.pbs
	qsub -v magicblasts=07c_MagicBlast_Dilution,genomes=PGE_0001_S_ruber/03_FNA,outdir=07c_RecPlot_Dilution 00_PBS/07d_RecPlot.pbs


Step 5: Calculate Coverage: 07e_MagicBlast_CoveragePlus.py
	## Show script options: python 00_Scripts/07e_MagicBlast_CoveragePlus.py -h
	## Coverage is reported as TAD80 by genome, contig, and gene. Relative abundance is also reported.
	## The metagenomes are located in folder: 00_Metagenome_ReadsTrimmed
	## The reference genomes are the draft genome assemblies located in folder: PGE_0001_S_ruber/03_FNA
	## The tabular blast files are the filtered best hits magic blast files in folder: 07a_MagicBlast_Metagenomes_RandomGroup1
	## the prodigal gene fasta files are were computer during the PGE: PGE_0001_S_ruber/03_FNN
	## The tabular blast file names are underscore delimited with the first 4 positions indicating the metagenome and the second 4 positions indicating the reference genome or prodigal file.

	# Control
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07a_MagicBlast_Control PGE_0001_S_ruber/03_FNN 95 80 07a_CoveragePlus_Control E1

	# UnShaded
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07b_MagicBlast_UnShaded PGE_0001_S_ruber/03_FNN 95 80 07b_CoveragePlus_UnShaded E4

	# Dilution
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution PGE_0001_S_ruber/03_FNN 95 80 07c_CoveragePlus_Dilution E6

#######################################################################################################################################
############ Repeat Step 5 with pID threshold gradient 96, 97, 98, 99, 100 for Dilution Series to test if peak disappears. ############
#######################################################################################################################################

	# Dilution
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution PGE_0001_S_ruber/03_FNN 96 80 07c_CoveragePlus_Dilution_pID96 E6
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution PGE_0001_S_ruber/03_FNN 97 80 07c_CoveragePlus_Dilution_pID97 E6
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution PGE_0001_S_ruber/03_FNN 98 80 07c_CoveragePlus_Dilution_pID98 E6
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution PGE_0001_S_ruber/03_FNN 99 80 07c_CoveragePlus_Dilution_pID99 E6
	bash 00_PBS/07f_Launch_CoveragePlus.pbs 00_Metagenome_ReadsTrimmed PGE_0001_S_ruber/03_FNA 07c_MagicBlast_Dilution PGE_0001_S_ruber/03_FNN 100 80 07c_CoveragePlus_Dilution_pID100 E6

#######################################################################################################################################


Step 6: Average Coverage/Abundance of genomes across samples.

	# Control
	python 00_Scripts/07h_Genome_Stats.py -gtd 07a_CoveragePlus_Control/GenomeSummary/ -out 07a_CoveragePlus_Control/07h_GenomeStats_Control

	# UnShaded
	python 00_Scripts/07h_Genome_Stats.py -gtd 07b_CoveragePlus_UnShaded/GenomeSummary/ -out 07b_CoveragePlus_UnShaded/07h_GenomeStats_UnShaded

	# Dilution
	python 00_Scripts/07h_Genome_Stats.py -gtd 07c_CoveragePlus_Dilution/GenomeSummary/ -out 07c_CoveragePlus_Dilution/07h_GenomeStats_Dilution

#######################################################################################################################################
############ Repeat Step 6 with pID threshold gradient 96, 97, 98, 99, 100 for Dilution Series to test if peak disappears. ############
#######################################################################################################################################

	# Dilution
	python 00_Scripts/07h_Genome_Stats.py -gtd 07c_CoveragePlus_Dilution_pID96/GenomeSummary/ -out 07c_CoveragePlus_Dilution_pID96/07h_GenomeStats_Dilution
	python 00_Scripts/07h_Genome_Stats.py -gtd 07c_CoveragePlus_Dilution_pID97/GenomeSummary/ -out 07c_CoveragePlus_Dilution_pID97/07h_GenomeStats_Dilution
	python 00_Scripts/07h_Genome_Stats.py -gtd 07c_CoveragePlus_Dilution_pID98/GenomeSummary/ -out 07c_CoveragePlus_Dilution_pID98/07h_GenomeStats_Dilution
	python 00_Scripts/07h_Genome_Stats.py -gtd 07c_CoveragePlus_Dilution_pID99/GenomeSummary/ -out 07c_CoveragePlus_Dilution_pID99/07h_GenomeStats_Dilution
	python 00_Scripts/07h_Genome_Stats.py -gtd 07c_CoveragePlus_Dilution_pID100/GenomeSummary/ -out 07c_CoveragePlus_Dilution_pID100/07h_GenomeStats_Dilution

#######################################################################################################################################



########################################################
########################################################
########################################################

08x: Combine Gene Coverage, Pangenome Analysis, and Annotation information

For this section we need to retrieve data from our prior analysis:

1) pangenome analysis (PGE)
2) Gene Annotations
3) Coverage/Abundance

Then we need to run some scripts I wrote to combine these outputs.

from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies
mkdir 08a_Gene_TAD_Annotation_PanCat_Control
mkdir 08b_Gene_TAD_Annotation_PanCat_UnShaded
mkdir 08c_Gene_TAD_Annotation_PanCat_Dilution


Step 00: Get genes, gene clusters, and pangenome category (PanCat) from PGE
	# This generates a tsv file with columns Gene_Name, Cluster_Name, Pangenome_Category, and n/N
	# where n/N = number of genomes with gene in cluster / total genomes

	python 00_Scripts/08a_Get_Genes_Clusters_PanCat.py -bnry PGE_0001_S_ruber/03_0001_S_ruber_parsed_binary.tsv -clstr PGE_0001_S_ruber/02_0001_S_ruber_Clustered_Genes.fnn.clstr -out 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv


Step 01: Get Averaged, Normalized Average TAD for each gene cluster (4 steps in 1 script)
    ## averaged, normalized, average tad (ANA-TAD)
    ## 1. averaged gene cluster tad per metagenome
    ## 2. normalized by average genome tad per metagenome
    ## 3. averaged across metagenomes

	0. Get TAD for each gene from each sample (metagenome).
	1. Calculate Average TAD for each gene Cluster in each sample.
	2. Normalize averaged gene cluster TAD by average genome TAD for each sample.
	3. Average the averaged normalized TAD of each gene cluster across samples.

	# Control
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07a_CoveragePlus_Control/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07a_CoveragePlus_Control/07h_GenomeStats_Control.tsv -o 08a_Gene_TAD_Annotation_PanCat_Control/

	# UnShaded
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07b_CoveragePlus_UnShaded/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07b_CoveragePlus_UnShaded/07h_GenomeStats_UnShaded.tsv -o 08b_Gene_TAD_Annotation_PanCat_UnShaded/

	# Dilution
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07c_CoveragePlus_Dilution/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07c_CoveragePlus_Dilution/07h_GenomeStats_Dilution.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution/

#######################################################################################################################################
############ Repeat Step 1 with pID threshold gradient 96, 97, 98, 99, 100 for Dilution Series to test if peak disappears. ############
#######################################################################################################################################

	# Dilution
	mkdir 08c_Gene_TAD_Annotation_PanCat_Dilution_pID96
	mkdir 08c_Gene_TAD_Annotation_PanCat_Dilution_pID97
	mkdir 08c_Gene_TAD_Annotation_PanCat_Dilution_pID98
	mkdir 08c_Gene_TAD_Annotation_PanCat_Dilution_pID99
	mkdir 08c_Gene_TAD_Annotation_PanCat_Dilution_pID100

	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07c_CoveragePlus_Dilution_pID96/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07c_CoveragePlus_Dilution_pID96/07h_GenomeStats_Dilution.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID96/
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07c_CoveragePlus_Dilution_pID97/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07c_CoveragePlus_Dilution_pID97/07h_GenomeStats_Dilution.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID97/
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07c_CoveragePlus_Dilution_pID98/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07c_CoveragePlus_Dilution_pID98/07h_GenomeStats_Dilution.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID98/
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07c_CoveragePlus_Dilution_pID99/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07c_CoveragePlus_Dilution_pID99/07h_GenomeStats_Dilution.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID99/
	python 00_Scripts/08b_Get_Averaged_Normalized_Average_TADs.py -t 07c_CoveragePlus_Dilution_pID100/TADgene/ -g 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -s 07c_CoveragePlus_Dilution_pID100/07h_GenomeStats_Dilution.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID100/

#######################################################################################################################################


Step 02: Match ANA-TAD to Gene Cluster Annotation

	# Control
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08a_Gene_TAD_Annotation_PanCat_Control/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

	# UnShaded
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08b_Gene_TAD_Annotation_PanCat_UnShaded/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

	# Dilution
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08c_Gene_TAD_Annotation_PanCat_Dilution/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

#######################################################################################################################################
############ Repeat Step 2 with pID threshold gradient 96, 97, 98, 99, 100 for Dilution Series to test if peak disappears. ############
#######################################################################################################################################

	# Dilution
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08c_Gene_TAD_Annotation_PanCat_Dilution_pID96/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID96/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08c_Gene_TAD_Annotation_PanCat_Dilution_pID97/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID97/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08c_Gene_TAD_Annotation_PanCat_Dilution_pID98/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID98/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08c_Gene_TAD_Annotation_PanCat_Dilution_pID99/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID99/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
	python 00_Scripts/08c_Match_ANA-TADs_toAnnotations.py -t 08c_Gene_TAD_Annotation_PanCat_Dilution_pID100/02_PanCats_ANATADs_byCluster.tsv -a 06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv -p 08a_Gene_TAD_Annotation_PanCat_Control/00_Genes_Clusters_PanCats.tsv -o 08c_Gene_TAD_Annotation_PanCat_Dilution_pID100/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

#######################################################################################################################################


Step 03: Summarize Annotations by PanCat and Abundant Specific and Rare Genes with a plot showing ANA-TAD Boxplots for each n/N

	# Control
	python 00_Scripts/08d_Summarize_Annotations_above_ANA-TAD.py -a 08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -t 0.25 -o 08a_Gene_TAD_Annotation_PanCat_Control/05_ANA-TAD-0.25_Annotation_Summary

	# UnShaded
	python 00_Scripts/08d_Summarize_Annotations_above_ANA-TAD.py -a 08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -t 0.25 -o 08b_Gene_TAD_Annotation_PanCat_UnShaded/05_ANA-TAD-0.25_Annotation_Summary

	# Dilution
	python 00_Scripts/08d_Summarize_Annotations_above_ANA-TAD.py -a 08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -t 0.25 -o 08c_Gene_TAD_Annotation_PanCat_Dilution/05_ANA-TAD-0.25_Annotation_Summary


Step 04: Plot Gene coverage Trends across metagenome time points and differences between Genome Specific, Rare, and Core Genes.

	- Open 04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv in Microsoft Excel and explore the *-NORM columns to look for trends.
	- Select gene clusters to highlight and prepare list for plotting script for each metagenome series.
	- make a file containing a comma separated list of "selected gene clusters", "color for plot" for each PanCat (Specific, Rare, Core)
	-> ClustersToPlot_Specific.txt, ClustersToPlot_Core.txt, ClustersToPlot_Rare.txt

	- Script takes 2 files - a metagenome order file and a file of cluster numbers and colors for the selected gene clusters. -> MetagenomeOrder.txt
	- MetagenomeOrder.txt should be a comma separated list of "metagenomeID, x-axis label"

	- mkdir 08e_GeneChangeAcrossMetagenomes
	- put the 4 text files from above into this new directeory
	- cd 08e_GeneChangeAcrossMetagenomes

	# Control
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Control_Specific -t Control Series Specific Gene Change -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Control_Rare -t Control Series Rare Gene Change -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Control_Core	 -t Control Series Core Gene Change -y 10 -w 80

	# UnShaded
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o UnShaded_Specific -t UnShade Series Specific Gene Change -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o UnShaded_Rare -t UnShade Series Rare Gene Change -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o UnShaded_Core -t UnShaded Series Core Gene Change -y 10 -w 80

	# Dilution
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Dilution_Specific -t Dilution Series Specific Gene Change -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Dilution_Rare -t Dilution Series Rare Gene Change -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Dilution_Core -t Dilution Series Core Gene Change -y 10 -w 80

#######################################################################################################################################
############ Repeat Step 4 with pID threshold gradient 96, 97, 98, 99, 100 for Dilution Series to test if peak disappears. ############
#######################################################################################################################################

	
	# Dilution 96% ID
	mkdir 08e_GeneChangeAcrossMetagenomes_pID96
	cp 08e_GeneChangeAcrossMetagenomes/*txt 08e_GeneChangeAcrossMetagenomes_pID96/
	cd 08e_GeneChangeAcrossMetagenomes_pID96/

	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID96/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Dilution_Specific -t Dilution Series Specific Gene Change 96% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID96/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Dilution_Rare -t Dilution Series Rare Gene Change 96% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID96/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Dilution_Core -t Dilution Series Core Gene Change 96% ID -y 10 -w 80

	cd ..

	# Dilution 97% ID
	mkdir 08e_GeneChangeAcrossMetagenomes_pID97
	cp 08e_GeneChangeAcrossMetagenomes/*txt 08e_GeneChangeAcrossMetagenomes_pID97/
	cd 08e_GeneChangeAcrossMetagenomes_pID97/

	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID97/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Dilution_Specific -t Dilution Series Specific Gene Change 97% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID97/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Dilution_Rare -t Dilution Series Rare Gene Change 97% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID97/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Dilution_Core -t Dilution Series Core Gene Change 97% ID -y 10 -w 80

	cd ..

	# Dilution 98% ID
	mkdir 08e_GeneChangeAcrossMetagenomes_pID98
	cp 08e_GeneChangeAcrossMetagenomes/*txt 08e_GeneChangeAcrossMetagenomes_pID98/
	cd 08e_GeneChangeAcrossMetagenomes_pID98/

	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID98/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Dilution_Specific -t Dilution Series Specific Gene Change 98% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID98/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Dilution_Rare -t Dilution Series Rare Gene Change 98% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID98/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Dilution_Core -t Dilution Series Core Gene Change 98% ID -y 10 -w 80

	cd ..

	# Dilution 99% ID
	mkdir 08e_GeneChangeAcrossMetagenomes_pID99
	cp 08e_GeneChangeAcrossMetagenomes/*txt 08e_GeneChangeAcrossMetagenomes_pID99/
	cd 08e_GeneChangeAcrossMetagenomes_pID99/

	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID99/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Dilution_Specific -t Dilution Series Specific Gene Change 99% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID99/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Dilution_Rare -t Dilution Series Rare Gene Change 99% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID99/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Dilution_Core -t Dilution Series Core Gene Change 99% ID -y 10 -w 80

	cd ..

	# Dilution 100% ID
	mkdir 08e_GeneChangeAcrossMetagenomes_pID100
	cp 08e_GeneChangeAcrossMetagenomes/*txt 08e_GeneChangeAcrossMetagenomes_pID100/
	cd 08e_GeneChangeAcrossMetagenomes_pID100/

	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID100/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Specific.txt -m MetagenomeOrder.txt -p Specific -o Dilution_Specific -t Dilution Series Specific Gene Change 100% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID100/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Rare.txt -m MetagenomeOrder.txt -p Rare -o Dilution_Rare -t Dilution Series Rare Gene Change 100% ID -y 10 -w 80
	python ../00_Scripts/08e_PlotGeneChanges.py -i ../08c_Gene_TAD_Annotation_PanCat_Dilution_pID100/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv -c ClustersToPlot_Core.txt -m MetagenomeOrder.txt -p Core -o Dilution_Core -t Dilution Series Core Gene Change 100% ID -y 10 -w 80

	cd ..

#######################################################################################################################################


########################################################
########################################################
########################################################

Compare to Ecoli Annotations
	Step 1: Get Ecoli Annotations.
		# Draft Ecoli genomes were ran through the PGE pipeline in the same way as the Sruber genomes.
		# Since we have 10,000+ Draft ecoli genomes, the experiment was repeated 100 times.
		# Resulting Representative gene sequences from the gene clusters of all 100 experiments were selected and clustered again.
		# The Final representative gene sequences were annotated and used for comparison.
		# There are 80,308 gene clusters (from 90% nucleotide sequence identity clusters)
		Notes: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes/01b-FILTERED-97.5/00_Ecoli_Annotation_Notes.txt

	1a:	from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies
		mkdir 09_Ecoli_vs_Sruber_Annotations
		cd 09_Ecoli_vs_Sruber_Annotations

		# Start with unfiltered annotation output
		cp /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes/01b-FILTERED-97.5/PGE_0000_clstrExpRpGns_Ecoli/Ecoli_combined_clustered_pangenome.clstrd.faa 00_Ecoli_ClstrRepSeq.faa
		cp /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes/01b-FILTERED-97.5/PGE_0000_clstrExpRpGns_Ecoli/*SwissProt.blst 00_Ecoli_ClstrRepSeq_SwissProt.blst
		cp /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes/01b-FILTERED-97.5/PGE_0000_clstrExpRpGns_Ecoli/*TrEMBL.blst 00_Ecoli_ClstrRepSeq_TrEMBL.blst
		cp /gpfs/pace2/project/bio-konstantinidis/rconrad6/Core-Pan_Genomes/01b-FILTERED-97.5/PGE_0000_clstrExpRpGns_Ecoli/*KEGG.tsv 00_Ecoli_ClstrRepSeq_KEGG.tsv

	1b: Filter blast results for best hit
		python ../00_Scripts/06e_BlastTab_BestHit_Filter.py -i 00_Ecoli_ClstrRepSeq_SwissProt.blst -pml 50 -pid 40
			Total number of entries in blast file: 401421
			Number of reads failing the filters: 245525
			Number of reads passing the filters: 155896
			Number of duplicate blast matches passing filter: 123104
			Number of best hit entries written to new file: 32792

		python ../00_Scripts/06e_BlastTab_BestHit_Filter.py -i 00_Ecoli_ClstrRepSeq_TrEMBL.blst -pml 50 -pid 40
			Total number of entries in blast file: 862475
			Number of reads failing the filters: 113052
			Number of reads passing the filters: 749423
			Number of duplicate blast matches passing filter: 671354
			Number of best hit entries written to new file: 78069

	1c: Retrieve gene annotation information from UniProt DBs
		python ../00_Scripts/06f_BlastTab_UniProtID_to_Gene_Annotation.py -p /gpfs/pace2/project/bio-konstantinidis/rconrad6/dbases/uniprot_sprot.PARSED.dat.tsv -b 00_Ecoli_ClstrRepSeq_SwissProt.filtered_best_hits.blst -o 01_Ecoli_ClstrRepSeq_SwissProt_Annotated.tsv
			Wrote  32792 gene annotations of  32792  blast entries from  13178  UniProt IDs to  01_Ecoli_ClstrRepSeq_SwissProt_Annotated.tsv file.

		python ../00_Scripts/06f_BlastTab_UniProtID_to_Gene_Annotation.py -p /gpfs/pace2/project/bio-konstantinidis/rconrad6/dbases/uniprot_trembl.PARSED.dat.tsv -b 00_Ecoli_ClstrRepSeq_TrEMBL.filtered_best_hits.blst -o 01_Ecoli_ClstrRepSeq_TrEMBL_Annotated.tsv
			Wrote  78069 gene annotations of  78069  blast entries from  72406  UniProt IDs to  01_Ecoli_ClstrRepSeq_TrEMBL_Annotated.tsv  file.

	1d: Filter for best hits and Convert KofamScan Output to match UniProt DB output
		python ../00_Scripts/06g_KofamScan_Filter_Convert.py -i 00_Ecoli_ClstrRepSeq_KEGG.tsv -o 01_Ecoli_ClstrRepSeq_KEGG_Annotated.tsv

	1e: Combine Annotation Results
		python ../00_Scripts/06h_Combine_Annotations.py -spb 01_Ecoli_ClstrRepSeq_SwissProt_Annotated.tsv -kfs 01_Ecoli_ClstrRepSeq_KEGG_Annotated.tsv -trb 01_Ecoli_ClstrRepSeq_TrEMBL_Annotated.tsv -o 02_Ecoli_ClstrRepSeq_Annotations.tsv

			Total TrEMBL Single Annotation: 38679
			Total TrEMBL_KofamScan Double Annotation: 6636
			Total Triple Annotation: 15881
			Total TrEMBL_SwissProt Double Annotation: 16873
			Total SwissProt_KofamScan Double Annotation: 12
			Total SwissProt Single Annotation: 26
			Total KofamScan Single Annotation: 106

	1f: Add Un-annotated genes as NoMatch Hypotheticals
		python ../00_Scripts/06i_Add_Unannotated_Genes.py -a 02_Ecoli_ClstrRepSeq_Annotations.tsv -q 00_Ecoli_ClstrRepSeq.faa -o 03_Ecoli_ClstrRepSeq_Annotations_NoMatch.tsv

	1g: Copy Sruber annotions
		cp ../06_Annotations/04_ClstrRepSeq_Annotations_NoMatch.tsv 03_Sruber_ClstrRepSeq_Annotations_NoMatch.tsv

	Step 2: Compare annotations.
		2a: Transform annotations results for pandas and plotting
			python ../00_Scripts/09a_Transform_Annotation_Results.py -a 03_Sruber_ClstrRepSeq_Annotations_NoMatch.tsv -o 04_Sruber_Transformed_Annotations.tsv
			python ../00_Scripts/09a_Transform_Annotation_Results.py -a 03_Ecoli_ClstrRepSeq_Annotations_NoMatch.tsv -o 04_Ecoli_Transformed_Annotations.tsv

		2b: Build Plots
			python ../00_Scripts/09b_Compare_Annotation_Results.py -f1 04_Ecoli_Transformed_Annotations.tsv -f2 04_Sruber_Transformed_Annotations.tsv -o 05_Annotations_Comparison_Summary


########################################################
########################################################
########################################################

Updated pangenome rarefaction curve with open/close model. remove intermediate pangenome categories.

python 00_Scripts/10b_Pangenome_Calculate_Model_Plot.py -m Sruber_Clstr_binary.tsv -n Salinibacter_ruber_Group_1 -c 0.9 -o Sruber -y 20000 -s 2000 -p 1000

python 00_Scripts/10c_Pangenome_Model_Plot_dir.py -y 20000 -s 2000 -i 00_Summary/B_E_coli_Rarefaction_Results/ -o Ecoli_Draft -n Escherichia_coli_Draft

python 00_Scripts/10c_Pangenome_Model_Plot_dir.py -y 20000 -s 2000 -i 00_Summary/B_B_thur_Rarefaction_Results/ -o Bthur -n Bacillus_thuringiensis_Draft

python 00_Scripts/10c_Pangenome_Model_Plot_dir.py -y 20000 -s 2000 -i 00_Summary/B_M_tuber_Rarefaction_Results/ -o Mtuber -n Mycobacterium_tuberculosis_Draft

python 00_Scripts/10c_Pangenome_Model_Plot_dir.py -y 20000 -s 2000 -i 00_Summary/B_P_aerug_Rarefaction_Results/ -o Paerug -n Pseudomonas_aeruginosa_Draft

python 00_Scripts/10c_Pangenome_Model_Plot_dir.py -y 20000 -s 2000 -i 00_Summary/B_S_enterica_Rarefaction_Results/ -o Senter -n Salmonella_enterica_Draft

python 00_Scripts/10c_Pangenome_Model_Plot_dir.py -y 20000 -s 2000 -i Ecoli_Closed/B_E_coli_Rarefaction_Results/ -o Ecoli_Complete -n Escherichia_coli_Complete

### Compare pangenomes
mkdir 00_Summary/E_Compare_Pangenomes

python 00_Scripts/07_PGE_Rarefaction_Summary_Stats.py -od 00_Summary/E_Compare_Pangenomes/ -sd 00_Summary/A_B_thur_Rarefaction_Summary/
python 00_Scripts/07_PGE_Rarefaction_Summary_Stats.py -od 00_Summary/E_Compare_Pangenomes/ -sd 00_Summary/A_E_coli_Rarefaction_Summary/
python 00_Scripts/07_PGE_Rarefaction_Summary_Stats.py -od 00_Summary/E_Compare_Pangenomes/ -sd 00_Summary/A_M_tuber_Rarefaction_Summary/
python 00_Scripts/07_PGE_Rarefaction_Summary_Stats.py -od 00_Summary/E_Compare_Pangenomes/ -sd 00_Summary/A_P_aerug_Rarefaction_Summary/
python 00_Scripts/07_PGE_Rarefaction_Summary_Stats.py -od 00_Summary/E_Compare_Pangenomes/ -sd 00_Summary/A_S_enterica_Rarefaction_Summary/

## adjust file names for Ecoli draft vs Ecoli Closed
mv 00_Summary/E_Compare_Pangenomes/07_Escherichia_coli_rarefaction_summary_stats.tsv 00_Summary/E_Compare_Pangenomes/07_Escherichia_coli_rarefaction_summary_stats_draft.tsv 
python 00_Scripts/07_PGE_Rarefaction_Summary_Stats.py -od 00_Summary/E_Compare_Pangenomes/ -sd Ecoli_Closed/A_E_coli_Rarefaction_Summary/
mv 00_Summary/E_Compare_Pangenomes/07_Escherichia_coli_rarefaction_summary_stats.tsv 00_Summary/E_Compare_Pangenomes/07_Escherichia_coli_rarefaction_summary_stats_closed.tsv

## manually adjust Ecoli names in tsv file
## Add Sruber file manually

python 00_Scripts/08_PGE_Compare_Pangenomes_with_error.py -cd 00_Summary/E_Compare_Pangenomes/ -op 00_PangenomeComparison_A

########################################################
########################################################
########################################################


rpoB PieTrees:

	Step 1: Identify the CD-HIT cluster annotated as rpoB.

		This information is in the 08a_Gene_TAD_Annotation_PanCat_Control directory (or 06_Annotation) in the 04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv file (or 04_ClstrRepSeq_Annotation.tsv)

		from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/08a_Gene_TAD_Annotation_PanCat_Control

		# The long gene name for rpoB is RNA polymerase subunit beta
		grep 'RNA polymerase subunit beta' 04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		# This returns two matches
		# looking at uniprot.org subunit beta' (D5HA36_SALRM) is rpoC
		# DNA-directed RNA polymerase subunit beta (D5HA37_SALRM) is rpoB which is Cluster_188

	Step 2: Retrieve fasta sequences for Cluster_188

		# I wrote a python script to do this using the CD-HIT clstr file and the concatenated fasta file of all Salinibacter CDS that was input to CD-HIT to generate the clusters.
		from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies

		mkdir 11_rpoB_PieTree
		# my PGE scripts must have removed the 02_0001_S_ruber_Clustered_Genes.fnn concatenated CDS file. Remake it.
		cat PGE_0001_S_ruber/03_FNN/* >> PGE_0001_S_ruber/02_0001_S_ruber_Clustered_Genes.fnn

		# Now in the /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/PGE_0001_S_ruber directory we have the two files we need to retrieve nucleotide fasta sequence for any CD-HIT cluster.
		# The two files are 02_0001_S_ruber_Clustered_Genes.fnn and 02_0001_S_ruber_Clustered_Genes.fnn.clstr
		# Run the python script still from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies

		python 00_Scripts/11a_Pangenome_Get_Fasta_for_CD-HIT_clstr.py -c PGE_0001_S_ruber/02_0001_S_ruber_Clustered_Genes.fnn.clstr -f PGE_0001_S_ruber/02_0001_S_ruber_Clustered_Genes.fnn -n 188 -o 11_rpoB_PieTree/Sruber_All_rpoB_Cluster188.fasta

		# This is a core gene cluster and contains 1 gene sequence for each of the 100 isolate draft genomes.
		grep '>' 11_rpoB_PieTree/Sruber_All_rpoB_Cluster188.fasta

	Step 3: Align rpoB sequences with Clustal Omega

		from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/11_rpoB_PieTree
		qsub -v id=rpoB,input=Sruber_All_rpoB_Cluster188.fasta,output=Sruber_All_rpoB_Cluster188.fasta.aln ../00_PBS/11c_Align_longSequences_ClustalOmega.pbs 

	Step 4: Build a reference tree with the rpoB sequence alignment using RAxML

		from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/11_rpoB_PieTree
		qsub -v input=Sruber_All_rpoB_Cluster188.fasta.aln,id=rpoB ../00_PBS/11d_RefTree_RAxML.pbs

	Step 5: Recruit short reads with MagicBlast, Fliter results, retrieve fasta sequence for short read blast matches

		a. Blast and Magic Blast cut the query name at the first space character and report this as the query ID. Fastq files can be named as:
			@D00468:261:HYTMHBCX2:1:1101:9119:31637 1:N:0:CAGAGAGG+ACTGCATA
			@D00468:261:HYTMHBCX2:1:1101:9119:31637 2:N:0:CAGAGAGG+ACTGCATA
			where the unique identifier can come after the space chacter.
			Filtering for best hit and retrieving the fasta sequence becomes impossible once the unique identifier is lost.
			Rename fastq files before running Magic Blast with fastq files if they have not been renamed already.

		b. Make blast database of rpoB sequence fasta file
			from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/11_rpoB_PieTree
			makeblastdb -dbtype nucl -in Sruber_All_rpoB_Cluster188.fasta -out Sruber_All_rpoB_Cluster188.fasta -parse_seqids

		c. Launch magic blast for each metagenome against rpoB sequences
			# The PBS script also filters the blast output for besthit, percent match length of 0.9, and minimum read length of 70bp.
			# In addition, it retrieves the short read fasta sequence matching the filtered blast output from the metagenome fastq files.

			from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/
			bash 00_PBS/11e_Recruit_ShortReads_Launch_MagicBlast.sh 00_Metagenome_ReadsTrimmed 11_rpoB_PieTree/Sruber_All_rpoB_Cluster188.fasta 11_rpoB_PieTree

		d. Combine short reads for each treatment (ponds: Control, Dilution, UnShaded)
			# Clean up files so far.
			mkdir 00_RefTree
			mv RAxML_* 00_RefTree/
			mkdir 00_rpoB_Sequence
			mv Sruber_All_rpoB_Cluster188.fasta* 00_rpoB_Sequence/
			mkdir 00_ShortRead_Blast
			mv *blst 00_ShortRead_Blast/
			mkdir 00_ShortRead_Fasta
			mv *fasta 00_ShortRead_Fasta/

			# I appended the sample name E?_M? to the short read fasta sequence names when I filtered and retrieved them.
			# Combine reads for each time series (E1, E4, E6)
			for f in 00_ShortRead_Fasta/*; do n=`basename $f | cut -d_ -f1`; cat $f >> ${n}_Sruber_rpoB_ShortReads.fasta; done

	Step 6: Add short read sequences to the reference tree alignment of rpoB sequences.

		from: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/
		bash 00_PBS/11g_Align_ShortReads_Launch_MAFFT_reads.sh 11_rpoB_PieTree 11_rpoB_PieTree/00_rpoB_Sequence/Sruber_All_rpoB_Cluster188.fasta.aln 11_rpoB_PieTree

	Step 7: Add short reads to reftree with RAxML Evolutionary Placement Algorithm (EPA)

		bash 00_PBS/11i_EPA_Tree_Launch_RAxML.sh 11_rpoB_PieTree 11_rpoB_PieTree/00_RefTree/RAxML_bestTree.Sruber_All_rpoB_Cluster188.fasta.aln.tree 11_rpoB_PieTree

	Step 8: Convert EPA Tree .jplace file for iTol

        # For Pie Trees with multiple metagenomes in one tree choose an option besides -u to parse out the unique sample identifier from the short read names.

        # Dirty rename reads to work with JPlace.to_iToL.rb script and metadata
        for f in *.jplace; do sed -i -r 's/(E.)_(M1.)_/\2-\1_/g' $f; done
        for f in *nwk; do sed -i 's/S_ruber_randomG_//g' $f; done
        for f in *.jplace; do sed -i 's/S_ruber_randomG_//g' $f; done

        # Additionally use -m to included a metadate file with the sample name and a color option.

        nano Jplace_Metadata.txt

        name    color
		M13     #7570b3
		M15     #e7298a
		M16     #66a61e

        # When MAFFt reverse compliments reads during alignment it places and _R_ at the beginning of the read name
        # This needs to be replaced for the pie read count to be correct
        
        for f in 06_EPA_Tree/*.jplace; do sed -i 's/_R_//g' $f; done



		bash 00_PBS/11k_Convert_EPA_Tree_JPlace.sh 11_rpoB_PieTree 11_rpoB_PieTree

	Step 9: Download from pace and upload .nwk file and itol files to itol

	Step 10: Check the work.

		EPA read placement Pie Values for most abundant isolate don't agree with genome specific coverage values for most abundant isolate
		Check the blast file results from 00_ShortRead_Blast - these were the reads selected for the alignment. Lets see who blast matched them with.
		The blast matches have been shuffled, and filtered for best hit, read length of 70 and percent match length of 0.9

		for f in *blst; do n=`basename $f | cut -d. -f1`; awk -F '\t' '{print $2}' $f | sort | uniq -c > ${n}.uniq; done

########################################################
########################################################
########################################################

Contig fishing for selected isolate contigs containing genes of interest in the metagenomes

mkdir 12_Contig_Fishing

	Step 01: Grab representative fasta sequences for selected gene clusters.
		We can use the same files from 08e Step 04.

		cd 12_Contig_Fishing/
		mkdir 00_Select_Contigs

		for f in ../08e_GeneChangeAcrossMetagenomes/ClustersToPlot_*; do o=`basename $f | cut -d. -f1`; python ../00_Scripts/12a_Pangenome_Get_RepFasta_for_CD-HIT_clstr.py -c ../PGE_0001_S_ruber/02_0001_S_ruber_Clustered_Genes.fnn.clstr -f ../PGE_0001_S_ruber/02_0001_S_ruber_Clustered_Genes.fnn -n $f -o 00_Select_Contigs/${o}.fna; done

	Step 02: Get assembled contigs from metagenomes
		mkdir 01_Assembled_Metagenomes
		for f in /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_New_Metagenomes/01_SPAdes_Assemblies_Attmpt?/E*/contigs.fasta; do n=`echo $f | cut -d/ -f9`; cp $f 01_Assembled_Metagenomes/${n}_contigs.fna; done

		# Filter assemblies for min contig length of 500.
		for f in 01_Assembled_Metagenomes/*.fna; do n=`basename $f | cut -d. -f1`; u=`echo $n | cut -d_ -f1-3`; python ../00_Scripts/01_SPAdes_Assembly_Filter_Rename_Stats.py -i $f -o 01_Assembled_Metagenomes/${n}.fltrd.fna -g $u -l 400 -c 1.0; rm $f; done

		ID 	Total Contigs 	Length Fail 	Cov Fail 	Pass 	N50 	Length(bp) 	%GC
		E1_M13_S1	414146	213551	140967	59628	2482	97075382	61.92
		E1_M15_S4	238300	121142	83399	33759	2308	52526426	62.47
		E1_M16_S7	290122	144215	116417	29490	1927	40908142	59.40
		E4_M13_S2	329417	170578	112463	46376	3236	88782984	60.55
		E4_M15_S5	411794	220795	113670	77329	2340	118740837	60.30
		E4_M16_S8	808441	429147	264642	114652	2260	174640518	59.17
		E6_M13_S3	238612	133872	29135	75605	1475	85390757	60.07
		E6_M15_S6	1081019	572176	353877	154966	2229	233839843	57.90
		E6_M16_S9	201044	99358	75102	26584	1950	37023545	59.15

	Step 02: Build Blast Database
		module load python/2.7 boost/1.53.0 ncbi_blast/2.2.29
		cd 01_Assembled_Metagenomes
		for f in *.fna; do makeblastdb -dbtype nucl -in $f; done
		cd ..

	Step 3: Blast
		bash ../00_PBS/12b_Launch_Select_Contig_Blast.sh 01_Assembled_Metagenomes fna 02a_Core_Blast_Results 00_Select_Contigs/ClustersToPlot_Core.fna 70
		bash ../00_PBS/12b_Launch_Select_Contig_Blast.sh 01_Assembled_Metagenomes fna 02b_Rare_Blast_Results 00_Select_Contigs/ClustersToPlot_Rare.fna 70
		bash ../00_PBS/12b_Launch_Select_Contig_Blast.sh 01_Assembled_Metagenomes fna 02c_Specific_Blast_Results 00_Select_Contigs/ClustersToPlot_Specific.fna 70

		for db in 01_Assembled_Metagenomes/E*.fna; do bash ../00_PBS/12b_Launch_Select_Contig_Blast.sh 00_Select_Contigs fna 02aa_Blast_Results $db 70; done

		## For combined assemblies and Genes
		make directory 06_CombinedGenes_CombinedMetagenomes_Fishing
		place selected genes and combined metagenome file in 06_CombinedGenes_CombinedMetagenomes_Fishing directory
		cd 06_CombinedGenes_CombinedMetagenomes_Fishing
		module load python/2.7 boost/1.53.0 ncbi_blast/2.2.29
		makeblastdb -dbtype nucl -in 00_MetagenomeAssemblies.fasta 



		# Check Isolate Draft Genomes for Specific genes to ensure only 1 good match (that they really are specific genes)
		bash ../00_PBS/12b_Launch_Select_Contig_Blast.sh ../01_Sruber_Group1_Genomes fna 03_DraftGenome_Specific_Results 00_Select_Contigs/ClustersToPlot_Specific.fna 70
		# The result is that they are truly specific - only coming from one draft genome. This is good. it means the clustering method is working.

		# Remove query lists
		rm *.txt

	Step 4: Filter Blast
		for f in 02*_Blast_Results/*.blast; do python ../00_Scripts/05c_Blast_Check_Filter.py -b $f -a 300 -p 70; rm $f; done
		for f in 03_DraftGenome_Specific_Results/*.blast; do python ../00_Scripts/05c_Blast_Check_Filter.py -b $f -a 300 -p 70; rm $f; done
		

	Step 5: Build plot of results - # of contigs and ANI values with a swarm plot of %ID matches per gene.

		### CORE ##################
		### - from local directory: /Users/rothconrad/Downloads/ReSearch/00_New_Salinibacter/12_ContigFishing/02a_Core_Blast_Results
		# Control 
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M13_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M15_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M16_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

		# UnShaded - from local directory
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M13_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M15_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M16_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

		# Dilution - from local directory
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M13_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M15_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M16_ClustersToPlot_Core.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		###################################################################################################################################################################################################

		### RARE ##################
		### Pace directory: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/12_Contig_Fishing
		### - from local directory: /Users/rothconrad/Downloads/ReSearch/00_New_Salinibacter/12_ContigFishing/02b_Rare_Blast_Results
		# Control 
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M13_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M15_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M16_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

		# UnShaded - from local directory
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M13_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M15_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M16_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

		# Dilution - from local directory
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M13_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M15_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M16_ClustersToPlot_Rare.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		###################################################################################################################################################################################################

		### Specific ##################
		### - from local directory: /Users/rothconrad/Downloads/ReSearch/00_New_Salinibacter/12_ContigFishing/02c_Specific_Blast_Results
		# Control 
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M13_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M15_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E1_M16_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08a_Gene_TAD_Annotation_PanCat_Control/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

		# UnShaded - from local directory
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M13_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M15_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E4_M16_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08b_Gene_TAD_Annotation_PanCat_UnShaded/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv

		# Dilution - from local directory
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M13_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M15_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		python ../12d_ContigFishing_Summary_Plot.py -b E6_M16_ClustersToPlot_Specific.filtered_best_hits.blst.tsv -a ../../08c_Gene_TAD_Annotation_PanCat_Dilution/04_ClstrRepSeq_PanCat_ANATAD_Annotation.tsv
		###################################################################################################################################################################################################

	Step 6: Select some long contigs from the blast matches and use ncbi blast online.
		- need to retrieve full length contig sequence from the metagenome assemblies. Use grep
		### from pace directory: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/12_Contig_Fishing

		mkdir 04_Select_Metagenome_Assembled_Contigs

		Longest contig: 
		grep -A 1 E6_M15_S6_NODE_3_length_93906_cov_8.301741 01_Assembled_Metagenomes/E6_M15_S6_contigs.fltrd.fna > 04_Select_Metagenome_Assembled_Contigs/E6_M15_S6_NODE_3_length_93906_cov_8.301741.fasta

		2nd longest contig:
		grep -A 1 E4_M15_S5_NODE_46_length_33930_cov_18.509807 01_Assembled_Metagenomes/E4_M15_S5_contigs.fltrd.fna > 04_Select_Metagenome_Assembled_Contigs/E4_M15_S5_NODE_46_length_33930_cov_18.509807.fasta

		3rd longest contig:
		grep -A 1 E6_M15_S6_NODE_104_length_29261_cov_3.418411 01_Assembled_Metagenomes/E6_M15_S6_contigs.fltrd.fna > 04_Select_Metagenome_Assembled_Contigs/E6_M15_S6_NODE_104_length_29261_cov_3.418411.fasta

		4th longest contig:

	Step 7: Explore synteny of metagenome assembled contigs that match a peak dilution gene

		### Explore the results from above and choose a peak dilution gene. Create a fasta file with the contigs that match the gene and place in a directory (05_Contig_Synteny_Test)
		from Pace: /gpfs/pace2/project/bio-konstantinidis/rconrad6/Salinibacter_Assemblies/12_Contig_Fishing/
		mkdir 05_Contig_Synteny_Test
			### make a list of metagenome assembled contigs names
			nano 05_Contig_Synteny_Test/Sruber_randomG_0057_111_Matches.txt
			nano 05_Contig_Synteny_Test/Sruber_randomG_0057_238_1.txt
			nano Sruber_randomG_0001_42_5_Matches.txt
			nano 05_Contig_Synteny_Test/Sruber_randomG_0001_81_3_Matches.txt

		### Retrieve fasta sequence for selected contigs - my contigs are named with E?_M1?_S?_* which is the metagenome sample name I can use to retrieve the sequence.
		### Additionally the metagenome assemblies are the fasta file format where each sequence is on only a single line. Not the gross wrapped sequence fasta format.
		while read contig; do mtg=`echo $contig | cut -d_ -f1-3`; grep -A 1 $contig 01_Assembled_Metagenomes/${mtg}_contigs.fltrd.fna >> 05_Contig_Synteny_Test/Sruber_randomG_0057_111_Matches.fasta; done < 05_Contig_Synteny_Test/Sruber_randomG_0057_111_Matches.txt

		while read contig; do mtg=`echo $contig | cut -d_ -f1-3`; grep -A 1 $contig 01_Assembled_Metagenomes/${mtg}_contigs.fltrd.fna >> 05_Contig_Synteny_Test/Sruber_randomG_0057_238_1_Matches.fasta; done < 05_Contig_Synteny_Test/Sruber_randomG_0057_238_1_Matches.txt

		while read contig; do mtg=`echo $contig | cut -d_ -f1-3`; grep -A 1 $contig 01_Assembled_Metagenomes/${mtg}_contigs.fltrd.fna >> 05_Contig_Synteny_Test/Sruber_randomG_0001_42_5_Matches.fasta; done < 05_Contig_Synteny_Test/Sruber_randomG_0001_42_5_Matches.txt

		while read contig; do mtg=`echo $contig | cut -d_ -f1-3`; grep -A 1 $contig 01_Assembled_Metagenomes/${mtg}_contigs.fltrd.fna >> 05_Contig_Synteny_Test/Sruber_randomG_0001_81_3_Matches.fasta; done < 05_Contig_Synteny_Test/Sruber_randomG_0001_81_3_Matches.txt

		### Run Prodigal to predict genes - lets cluster with amino acid at 60% id
		cd 05_Contig_Synteny_Test/
		prodigal -f gff -i Sruber_randomG_0057_111_Matches.fasta -d Sruber_randomG_0057_111_Matches.fnn -a Sruber_randomG_0057_111_Matches.faa

		prodigal -f gff -i Sruber_randomG_0057_238_1_Matches.fasta -d Sruber_randomG_0057_238_1_Matches.fnn -a Sruber_randomG_0057_238_1_Matches.faa

		prodigal -f gff -i Sruber_randomG_0001_42_5_Matches.fasta -d Sruber_randomG_0001_42_5_Matches.fnn -a Sruber_randomG_0001_42_5_Matches.faa

		prodigal -f gff -i Sruber_randomG_0001_81_3_Matches.fasta -d Sruber_randomG_0001_81_3_Matches.fnn -a Sruber_randomG_0001_81_3_Matches.faa

		### Run CD-HIT-EST to cluster genes
		cd-hit-est -i Sruber_randomG_0057_111_Matches.fnn -o Sruber_randomG_0057_111_Matches.cdhit.fnn -c 0.9 -n 8 -G 0 -g 1 -aS 0.7 -d 0
		
		cd-hit -i Sruber_randomG_0057_238_1_Matches.faa -o Sruber_randomG_0057_238_1_Matches.cdhit.faa -c 0.4 -n 2 -G 0 -g 1 -aS 0.7 -d 0

		cd-hit -i Sruber_randomG_0001_42_5_Matches.faa -o Sruber_randomG_0001_42_5_Matches.cdhit.faa -c 0.4 -n 2 -G 0 -g 1 -aS 0.7 -d 0

		cd-hit -i Sruber_randomG_0001_81_3_Matches.faa -o Sruber_randomG_0001_81_3_Matches.cdhit.faa -c 0.4 -n 2 -G 0 -g 1 -aS 0.7 -d 0

		### write the script to build the plot from this nonsense

		python 04a_ContigSynteny_Plot.py -c Sruber_randomG_0001_81_3_Matches.fasta -p Sruber_randomG_0001_81_3_Matches.faa -r Sruber_randomG_0001_81_3_Matches.cdhit.faa.clstr -o Sruber_randomG_0001_81_3_Matches.SyntenyPlot.png -y

		python ../04a_ContigSynteny_Plot.py -c ContigSequenceMatchesFor_S_ruber_randomG_0002_50_8.fasta -p ContigSequenceMatchesFor_S_ruber_randomG_0002_50_8_genes.faa -r ContigSequenceMatchesFor_S_ruber_randomG_0002_50_8_genes.cdhit.faa.clstr -o ContigSequenceMatchesFor_S_ruber_randomG_0002_50_8_Synteny_Plot.png -y

		python 04a_ContigSynteny_Plot.py -c Sruber_randomG_0001_42_5_Matches.fasta -p Sruber_randomG_0001_42_5_Matches.faa -r Sruber_randomG_0001_42_5_Matches.cdhit.faa.clstr -o Sruber_randomG_0001_42_5_Matches.SyntenyPlot.png -y

		python 04a_ContigSynteny_Plot.py -c Sruber_randomG_0057_238_1_Matches.fasta -p Sruber_randomG_0057_238_1_Matches.faa -r Sruber_randomG_0057_238_1_Matches.cdhit.faa.clstr -o Sruber_randomG_0057_238_1_Matches.SyntenyPlot.png -y

		python 04a_ContigSynteny_Plot.py -c Sruber_randomG_0057_111_Matches.fasta -p Sruber_randomG_0057_111_Matches.fnn -r Sruber_randomG_0057_111_Matches.cdhit.fnn.clstr -o Sruber_randomG_0057_111_Matches.SyntenyPlot.png -y

	Step X: Look at other annotation on contig
		I've identified 7 peak dilution genes that are from the same genome on 3 contigs.
		Place the 3 contig names in a file. Grab other genes annotation from this contig.
		from: /Users/rothconrad/Downloads/ReSearch/00_New_Salinibacter/01_Dilution
		while read contig; do grep $contig E6_Dilution_Annotation_Abundance.tsv; done < 3_Contigs_Contain_7_Specific_Dilution_Peak_Genes.txt 
		# Copy and paste to file 3_Dilution_Peak_Contigs.xlsx



########################################################
########################################################
########################################################




########################################################
########################################################
########################################################



python MagicBlast02b_CoveragePlus.py -m ../00_Metagenome_ReadsTrimmed/E1_M15_S4_combined.fastq -g ../PGE_0001_S_ruber/03_FNA/S_ruber_randomG_0001.fna -p ../PGE_0001_S_ruber/03_FNN/S_ruber_randomG_0001.fnn -b ../07a_MagicBlast_Metagenomes_RandomGroup1/E1_M15_S4_combined_S_ruber_randomG_0001.fltrdBstHts.blst -c 95 -d 80 -o coverageplus


python MagicBlast02a_Coverage.py -m ../00_Metagenome_ReadsTrimmed/E1_M15_S4_combined.fastq -g ../PGE_0001_S_ruber/03_FNA/S_ruber_randomG_0001.fna -b ../07a_MagicBlast_Metagenomes_RandomGroup1/E1_M15_S4_combined_S_ruber_randomG_0001.fltrdBstHts.blst -c 95 -d 80 -o coverage


########################################################
########################################################
########################################################







